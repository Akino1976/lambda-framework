version: "2"

services:

  package:
    image: akino1976/lambda-packer
    environment:
      - PYPI_USERNAME
      - PYPI_PASSWORD
    command: ${PACKAGE_NAME}
    volumes:
      - ./handlers:/app/src
      - ./packages:/packages

  lambdaserver-base:
    image: akino1976/lambda-server
    environment:
      PYTHONDONTWRITEBYTECODE: 1
      S3_HOST: aws-mock:3000
      ENVIRONMENT: docker
      VERSION: ${VERSION}
      AWS_REGION: ${AWS_REGION}
      APP_LOG_STYLE: text
      APP_NAME: bi-framework
      APP_COMPONENT: data_integration
      INPUT_BUCKET: bi-framework--data-lake-docker-eu-west-1
      PACKAGE_NAME: ${PACKAGE_NAME}
    volumes:
      - ./tools/awsmock-credentials:/root/.aws/credentials

  lambdaserver:
    extends:
      service: lambdaserver-base
      file: docker-compose.yaml
    volumes:
      - ./packages:/packages

  lambdaserver-watch:
    extends:
      service: lambdaserver-base
      file: docker-compose.yaml
    environment:
      BAMBORA_PYPI_USERNAME: ${PYPI_USERNAME}
      BAMBORA_PYPI_PASSWORD: ${PYPI_PASSWORD}
      RUN_IN_WATCH_MODE: 1
      EXEC_BEFORE: |
        export PYTHONPATH=$$PYTHONPATH:/tmp/unpacked; \
        unzip -o /packages/${PACKAGE_NAME} -d /tmp/unpacked/
    ports:
      - 5000:80
    volumes:
      - ./packages:/packages
      - ./handlers:/var/task

  provisioner:
    image: akino1976/aws-local-provisioner
    environment:
      S3_HOST: aws-mock:3000
      AWS_LOCAL_TEMPLATE_PATH: /templates/aws-mock-resources.yaml
    volumes:
      - ./aws-mock-resource.yaml:/templates/aws-mock-resources.yaml
    depends_on:
      - aws-mock

  aws-mock:
    image: localstack/localstack:0.8.6
    environment:
      DEFAULT_REGION: eu-west-1
      SERVICES: s3:3000
      FORCE_NONINTERACTIVE: 'true'
      HOSTNAME: aws-mock
      HOSTNAME_EXTERNAL: aws-mock
      DEBUG: 0
    ports:
      - 3000
